@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ex: <http://example.com/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix gtfs: <http://vocab.gtfs.org/terms#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix schema: <http://schema.org/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .



<#TriplesMapStopTimes>

  rml:logicalSource [
      rml:source "stop_times.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/stoptimes/{trip_id}-{stop_id}-{arrival_time}";
    rr:class gtfs:StopTime;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:trip;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapTrip>;
      rr:joinCondition [
        rr:child "trip_id";
        rr:parent "trip_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:stop;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapStop>;
      rr:joinCondition [
        rr:child "stop_id";
        rr:parent "stop_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:arrivalTime;
    rr:objectMap [
      rr:datatype xsd:duration;
      rml:reference "arrival_time";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:departureTime;
    rr:objectMap [
      rr:datatype xsd:duration;
      rml:reference "departure_time";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:stopSequence;
    rr:objectMap [
      rr:datatype xsd:nonNegativeInteger;
      rml:reference "stop_sequence";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:headsign;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "stop_headsign";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:pickupType;
    rr:objectMap [
      rr:template "http://vocab.gtfs.org/terms#PickupType={pickup_type}";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:dropOffType;
    rr:objectMap [
      rr:template "http://vocab.gtfs.org/terms#DropOffType={drop_off_type}";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:distanceTraveled;
    rr:objectMap [
      rr:datatype xsd:decimal;
      rml:reference "shape_dist_traveled";
    ];
  ];
.  


<#TriplesMapTrip>

  rml:logicalSource [
      rml:source "trips.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/trips/{trip_id}";
    rr:class gtfs:Trip;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:route;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapRoute>;
      rr:joinCondition [
        rr:child "route_id";
        rr:parent "route_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:service;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapService>;
      rr:joinCondition [
        rr:child "service_id";
        rr:parent "service_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:shape;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapShape>;
      rr:joinCondition [
        rr:child "shape_id";
        rr:parent "shape_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:headsign;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "trip_headsign"
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:shortName;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "trip_short_name"
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:direction;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "direction_id"
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:block;
    rr:objectMap [
      rr:datatype xsd:nonNegativeInteger;
      rml:reference "block_id"
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:wheelchairAccessible;
    rr:objectMap [
      rr:datatype gtfs:WheelchairBoardingStatus;
      rml:reference "wheelchair_accesible"
    ]
  ];

.

<#TriplesMapRoute>
  
  rml:logicalSource [
      rml:source "routes.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/routes/{route_id}";
    rr:class gtfs:Route;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:agency;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapAgency>;
      rr:joinCondition [
        rr:child "agency_id";
        rr:parent "agency_id";
      ]
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:shortName;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "route_short_name";
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:longName;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "route_long_name";
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate dct:description;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "route_desc";
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:routeType;
    rr:objectMap [
      rr:template "http://vocab.gtfs.org/terms#RouteType={route_type}";
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:routeUrl;
    rr:objectMap [
      rr:datatype foaf:Document;
      rml:reference "route_url";
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:color;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "route_color";
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:textColor;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "route_text_color";
    ]
  ];
.


<#TriplesMapAgency>

  rml:logicalSource [
      rml:source "agency.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/agency/{agency_id}";
    rr:class gtfs:Agency;
  ];

  rr:predicateObjectMap[
    rr:predicate foaf:page;
    rr:objectMap [
      rr:datatype foaf:Document;
      rml:reference "agency_url";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate foaf:name;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "agency_name";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:timeZone;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "agency_timezone";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate dct:language;
    rr:objectMap [
      rr:datatype dct:LiguisticSystem;
      rml:reference "agency_lang";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate foaf:phone;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "agency_phone";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:fareUrl;
    rr:objectMap [
      rr:termType rr:IRI;
      rml:reference "angency_fare_url";
    ];
  ];

.

<#TriplesMapStop>

  rml:logicalSource [
      rml:source "stops.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/stops/{stop_id}";
    rr:class gtfs:Stop;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:code;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "stop_code";
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate foaf:name;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "stop_name";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate dct:description;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "stop_desc";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate geo:lat;
    rr:objectMap [
      rr:datatype xsd:decimal;
      rml:reference "stop_lat";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate geo:long;
    rr:objectMap [
      rr:datatype xsd:decimal;
      rml:reference "stop_long";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:zone;
    rr:objectMap [
      rr:datatype gtfs:Zone;
      rml:reference "zone_id";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate foaf:page;
    rr:objectMap [
      rr:datatype foaf:Document;
      rml:reference "stop_url";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:locationType;
    rr:objectMap [
      rr:datatype xsd:integer;
      rml:reference "location_type";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:parentStation;
    rr:objectMap [
      rr:datatype gtfs:Stop;
      rml:reference "parent_station";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:timeZone;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "stop_timezone";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:weelchairAccessible;
    rr:objectMap [
      rr:datatype gtfs:WheelchairBoardingStatus;
      rml:reference "wheelchair_boarding";
    ];
  ];
.


<#TriplesMapServiceDates>

  rml:logicalSource [
      rml:source "calendar_dates.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/servicedates/{service_id}-{date}";
    rr:class gtfs:ServiceDates;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:service;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapService>;
      rr:joinCondition [
        rr:child "service_id";
        rr:parent "service_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate dct:date;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "date";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:dateAddition;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "exception_type";
    ];
  ];
. 


<#TriplesMapFare>

  rml:logicalSource [
      rml:source "fare_attributes.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/fare/{fare_id}";
    rr:class gtfs:Fare;
  ];


  rr:predicateObjectMap[
    rr:predicate schema:price;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "price";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate schema:priceCurrency;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "currency_type";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:paymentMethod;
    rr:objectMap [
      rr:template "http://vocab.gtfs.org/terms#PaymentMethod={payment_method}";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:transfers;
    rr:objectMap [
      rr:template "http://vocab.gtfs.org/terms#Transfers={transfers}";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:transferExpiryTime;
    rr:objectMap [
      rr:datatype xsd:duration;
      rml:reference "transfer_duration";
    ];
  ];
.


<#TriplesMapService>

  rml:logicalSource [
      rml:source "calendar.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/service/{service_id}";
    rr:class gtfs:Service;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:monday;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "monday";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:tuesday;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "tuesday";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:wednesday;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "wednesday";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:thursday;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "thursday";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:friday;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "friday";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:saturday;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "saturday";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:sunday;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "sunday";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate schema:startDate;
    rr:objectMap [
      rr:datatype xsd:date;
      rml:reference "start_date";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate schema:endDate;
    rr:objectMap [
      rr:datatype xsd:date;
      rml:reference "end_date";
    ];
  ];
.  


<#TriplesMapFeed>

  rml:logicalSource [
      rml:source "feed_info.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:constant "http://linkedgtfs.com/CITY/feed";
    rr:class gtfs:Feed;
  ];


  rr:predicateObjectMap[
    rr:predicate dct:publisher;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "feed_publisher_name";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate foaf:page;
    rr:objectMap [
      rr:datatype foaf:Document;
      rml:reference "feed_published_url";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate dct:language;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "feed_lang";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate schema:startDate;
    rr:objectMap [
      rr:datatype xsd:date;
      rml:reference "feed_start_date";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate schema:endDate;
    rr:objectMap [
      rr:datatype xsd:date;
      rml:reference "feed_end_date";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate schema:version;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "feed_version";
    ];
  ];

. 


<#TriplesMapShape>

  rml:logicalSource [
      rml:source "shapes.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/shape/{shape_id}";
    rr:class gtfs:Shape;
  ];

  rr:predicateObjectMap[
    rr:predicate geo:lat;
    rr:objectMap [
      rr:datatype xsd:decimal;
      rml:reference "shape_pt_lat";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate geo:long;
    rr:objectMap [
      rr:datatype xsd:decimal;
      rml:reference "shape_pt_lon";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:pointSequence;
    rr:objectMap [
      rr:datatype xsd:nonNegativeInteger;
      rml:reference "shape_pt_sequence";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:distanceTraveled;
    rr:objectMap [
      rr:datatype xsd:decimal;
      rml:reference "shape_dist_traveled";
    ];
  ];
.



<#TriplesMapFareRule>

  rml:logicalSource [
      rml:source "fare_rules.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/farerules/{fare_id}-{route_id}";
    rr:class gtfs:FareRule;
  ];


  rr:predicateObjectMap[
    rr:predicate gtfs:fare;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapFare>;
      rr:joinCondition [
        rr:child "fare_id";
        rr:parent "fare_ud";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:route;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapRoute>;
      rr:joinCondition [
        rr:child "route_id";
        rr:parent "route_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:originZone;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "origin_id";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:destinationZone;
    rr:objectMap [
      rr:datatype xsd:string;
      rml:reference "destination_id";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:zone;
    rr:objectMap [
      rr:datatype gtfs:Zone;
      rml:reference "contains_id";
    ];
  ];
.

<#TriplesMapFrequency>
  
  rml:logicalSource [
      rml:source "frequencies.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/frequency/{trip_id}-{start_time}";
    rr:class gtfs:Frequency;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:trip;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapTrip>;
      rr:joinCondition [
        rr:child "trip_id";
        rr:parent "trip_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:startTime;
    rr:objectMap [
      rr:datatype xsd:duration;
      rml:reference "start_time";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:endTime;
    rr:objectMap [
      rr:datatype xsd:duration;
      rml:reference "end_time";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:headwaySeconds;
    rr:objectMap [
      rr:datatype xsd:duration;
      rml:reference "headway_secs";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:exactTimes;
    rr:objectMap [
      rr:datatype xsd:boolean;
      rml:reference "exact_times";
    ];
  ];

.

<#TriplesMapTransfer>

  rml:logicalSource [
      rml:source "transfers.csv";
      rml:referenceFormulation ql:CSV;
  ];

  rr:subjectMap [
    rr:template "http://linkedgtfs.com/CITY/transfer/{from_stop_id}-{to_stop_id}-{transfer_type}";
    rr:class gtfs:TransferRule;
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:originStop;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapStop>;
      rr:joinCondition [
        rr:child "from_stop_id";
        rr:parent "stop_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:destinationStop;
    rr:objectMap [
      rr:parentTriplesMap <#TriplesMapStop>;
      rr:joinCondition [
        rr:child "to_stop_id";
        rr:parent "stop_id";
      ]
    ]
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:transferType;
    rr:objectMap [
      rr:template "http://vocab.gtfs.org/terms#TransferType={transfer_type}";
    ];
  ];

  rr:predicateObjectMap[
    rr:predicate gtfs:minimumTransferTime;
    rr:objectMap [
      rr:datatype xsd:nonNegativeInteger;
      rml:reference "min_transfer_time";
    ];
  ];
.

