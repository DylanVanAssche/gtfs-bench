@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix ex: <http://example.com/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix rev: <http://purl.org/stuff/rev#>.
@prefix gtfs: <http://vocab.gtfs.org/terms#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix schema: <http://schema.org/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rmlc: <http://www.ex.org/ns/rmlc#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@base <http://example.org/>.
@prefix xrr: <http://i3s.unice.fr/xr2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .

<stoptimes>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#StopTime>
		];
	];
.

<stoptimeArrivalTime>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#arrivalTime> ];
		rr:objectMap[
			xrr:reference "$.arrival_time";
			rr:datatype xsd:duration;
		];
	];
.

<stoptimeDepartureTime>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#departureTime> ];
		rr:objectMap[
			xrr:reference "$.departure_time";
			rr:datatype xsd:duration;
		];
	];
.

<stoptimeStopSequence>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#stopSequence> ];
		rr:objectMap[
			xrr:reference "$.stop_sequence";
			rr:datatype xsd:integer;
		];
	];
.



<stoptimeHeadsign>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#headsign> ];
		rr:objectMap[
			xrr:reference "$.stop_headsign";
		];
	];
.

<stoptimePickupType>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#pickupType> ];
		rr:objectMap[
			rr:template "http://vocab.gtfs.org/terms#PickupType={$.pickup_type}";
		];
	];
.

<stoptimeDropOffType>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#dropOffType> ];
		rr:objectMap[
			rr:template "http://vocab.gtfs.org/terms#DropOffType={$.drop_off_type}";
		];
	];
.

<stoptimeDistanceTraveled>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#distanceTraveled> ];
		rr:objectMap[
			xrr:reference "$.shape_dist_traveled";
		];
	];
.

<stoptimeTrip>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#trip> ];
		rr:objectMap [
			rr:parentTriplesMap <trips>; rr:joinCondition [ rr:child "$.trip_id"; rr:parent "$.trip_id"; ];
			# rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}"; rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		];
	];
.

<stoptimeStop>
	xrr:logicalSource [
		xrr:query """db.STOP_TIMES.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/stoptimes/{$.trip_id}-{$.stop_id}-{$.arrival_time}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#StopTime>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#stop> ];
		rr:objectMap [
			rr:parentTriplesMap <stops>; rr:joinCondition [ rr:child "$.stop_id"; rr:parent "$.stop_id"; ];
			# rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}"; rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		];
	];
.


<agency>
	xrr:logicalSource [
		xrr:query """db.AGENCY.find( { 'agency_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Agency>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#Agency>
		];
	];
.

<agencyFareUrl>
	xrr:logicalSource [
		xrr:query """db.AGENCY.find( { 'agency_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Agency>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#fareUrl> ];
		rr:objectMap[
			xrr:reference "$.agency_fare_url";
		];
	];
.

<agencyPhone>
	xrr:logicalSource [
		xrr:query """db.AGENCY.find( { 'agency_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Agency>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://xmlns.com/foaf/0.1/phone> ];
		rr:objectMap[
			xrr:reference "$.agency_phone";
		];
	];
.

<agencyLanguage>
	xrr:logicalSource [
		xrr:query """db.AGENCY.find( { 'agency_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Agency>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://purl.org/dc/terms/language> ];
		rr:objectMap[
			xrr:reference "$.agency_lang";
		];
	];
.

<agencyTimeZone>
	xrr:logicalSource [
		xrr:query """db.AGENCY.find( { 'agency_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Agency>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#timeZone> ];
		rr:objectMap[
			xrr:reference "$.agency_timezone";
		];
	];
.

<agencyPage>
	xrr:logicalSource [
		xrr:query """db.AGENCY.find( { 'agency_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Agency>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://xmlns.com/foaf/0.1/page> ];
		rr:objectMap[
			xrr:reference "$.agency_url";
		];
	];
.

<agencyName>
	xrr:logicalSource [
		xrr:query """db.AGENCY.find( { 'agency_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Agency>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://xmlns.com/foaf/0.1/name> ];
		rr:objectMap[
			xrr:reference "$.agency_name";
		];
	];
.


<stops>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#Stop>
		];
	];
.

<stopCode>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#code> ];
		rr:objectMap[
			xrr:reference "$.stop_code";
		];
	];
.

<stopTimezone>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#timeZone> ];
		rr:objectMap[
			xrr:reference "$.stop_timezone";
		];
	];
.

<stopLocationType>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#locationType> ];
		rr:objectMap[
			xrr:reference "$.location_type";
		];
	];
.

<stopLocationLong>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/2003/01/geo/wgs84_pos#long> ];
		rr:objectMap[
			xrr:reference "$.stop_lon";
		];
	];
.

<stopLocationParentStation>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#parentStation> ];
		rr:objectMap[
			#xrr:reference "$.parent_station";
			rr:parentTriplesMap <stops>; rr:joinCondition [ rr:child "$.parent_station"; rr:parent "$.stop_id"; ];
		];
	];
.

<stopName>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://xmlns.com/foaf/0.1/name> ];
		rr:objectMap[
			xrr:reference "$.stop_name";
		];
	];
.

<stopDescription>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://purl.org/dc/terms/description> ];
		rr:objectMap[
			xrr:reference "$.stop_desc";
		];
	];
.

<stopLat>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ];
		rr:objectMap[
			xrr:reference "$.stop_lat";
		];
	];
.


<stopWheelchairBoarding>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#wheelchairBoarding> ];
		rr:objectMap[
			xrr:reference "$.wheelchair_boarding";
			rr:datatype xsd:boolean;
		];
	];
.

<stopZone>
	xrr:logicalSource [
		xrr:query """db.STOPS.find( { 'stop_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/stops/{$.stop_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Stop>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#zone> ];
		rr:objectMap[
			xrr:reference "$.zone_id";
		];
	];
.


<routes>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#Route>
		];
	];
.

<routeLongName>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#longName> ];
		rr:objectMap[
			xrr:reference "$.route_long_name";
		];
	];
.

<routeURL>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#routeUrl> ];
		rr:objectMap[
			xrr:reference "$.route_url";
		];
	];
.

<routeTextColor>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#textColor> ];
		rr:objectMap[
			xrr:reference "$.route_text_color";
		];
	];
.

<routeShortName>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#shortName> ];
		rr:objectMap[
			xrr:reference "$.route_short_name";
		];
	];
.

<routeColor>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#color> ];
		rr:objectMap[
			xrr:reference "$.route_color";
		];
	];
.

<routeDescription>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://purl.org/dc/terms/description> ];
		rr:objectMap[
			xrr:reference "$.route_desc";
		];
	];
.

<routeType>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#routeType> ];
		rr:objectMap[
			rr:template "http://vocab.gtfs.org/terms#RouteType={$.route_type}";
		];
	];
.

<routeAgency>
	xrr:logicalSource [
		xrr:query """db.ROUTES.find( { 'route_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Route>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#agency> ];
		rr:objectMap [
			rr:parentTriplesMap <agency>; rr:joinCondition [ rr:child "$.agency_id"; rr:parent "$.agency_id"; ];
			# rr:template "http://linkedgtfs.com/CITY/agency/{$.agency_id}"; rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		];
	];
.

<calendar_rules>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#CalendarRule>
		];
	];
.

<calendar_rulesMonday>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#monday> ];
		rr:objectMap[
			xrr:reference "$.monday";
			rr:datatype xsd:boolean;
		];
	];
.

<calendar_rulesTuesday>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#tuesday> ];
		rr:objectMap[
			xrr:reference "$.tuesday";
			rr:datatype xsd:boolean;
		];
	];
.

<calendar_rulesWednesday>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#wednesday> ];
		rr:objectMap[
			xrr:reference "$.wednesday";
			rr:datatype xsd:boolean;
		];
	];
.

<calendar_rulesThursday>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#thursday> ];
		rr:objectMap[
			xrr:reference "$.thursday";
			rr:datatype xsd:boolean;
		];
	];
.

<calendar_rulesFriday>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#friday> ];
		rr:objectMap[
			xrr:reference "$.friday";
			rr:datatype xsd:boolean;
		];
	];
.

<calendar_rulesSaturday>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#saturday> ];
		rr:objectMap[
			xrr:reference "$.saturday";
			rr:datatype xsd:boolean;
		];
	];
.

<calendar_rulesSunday>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#sunday> ];
		rr:objectMap[
			xrr:reference "$.sunday";
			rr:datatype xsd:boolean;
		];
	];
.

<calendar_rulesStartDate>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://schema.org/startDate> ];
		rr:objectMap[
			xrr:reference "$.start_date";
			rr:datatype xsd:date;
		];
	];
.

<calendar_rulesEndDate>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_rules/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://schema.org/endDate> ];
		rr:objectMap[
			xrr:reference "$.end_date";
			rr:datatype xsd:date;
		];
	];
.

<calendar_date_rules>
	xrr:logicalSource [
		xrr:query """db.CALENDAR_DATES.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_date_rule/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarDateRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#CalendarDateRule>
		];
	];
.

<calendar_date_rulesDate>
	xrr:logicalSource [
		xrr:query """db.CALENDAR_DATES.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_date_rule/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarDateRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://purl.org/dc/terms/date> ];
		rr:objectMap[
			xrr:reference "$.date";
			rr:datatype xsd:date;
		];
	];
.

<calendar_date_rulesDateAddition>
	xrr:logicalSource [
		xrr:query """db.CALENDAR_DATES.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/calendar_date_rule/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#CalendarDateRule>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#dateAddition> ];
		rr:objectMap[
			xrr:reference "$.exception_type";
			rr:datatype xsd:boolean;
		];
	];
.

<trips>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#Trip>
		];
	];
.

<tripShape>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#shape> ];
		rr:objectMap[
			rr:template "http://linkedgtfs.com/CITY/shape/{$.shape_id}";
		];
	];
.

<tripService>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#service> ];
		rr:objectMap [
			rr:parentTriplesMap <services>; rr:joinCondition [ rr:child "$.service_id"; rr:parent "$.service_id"; ];
			# rr:template "http://linkedgtfs.com/CITY/service/{$.service_id}"; rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		];
	];
.

<tripHeadsign>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#headsign> ];
		rr:objectMap[
			xrr:reference "$.trip_headsign";
		];
	];
.

<tripRoute>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#route> ];
		rr:objectMap [
			rr:parentTriplesMap <routes>; rr:joinCondition [ rr:child "$.route_id"; rr:parent "$.route_id"; ];
			# rr:template "http://linkedgtfs.com/CITY/routes/{$.route_id}"; rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		];
	];
.

<tripBlock>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#block> ];
		rr:objectMap[
			xrr:reference "$.block_id";
		];
	];
.

<tripWheelchairAccessible>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#wheelchairAccessible> ];
		rr:objectMap[
			xrr:reference "$.wheelchair_accessible";
			rr:datatype xsd:boolean;
		];
	];
.

<tripShortName>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#shortName> ];
		rr:objectMap[
			xrr:reference "$.trip_short_name";
		];
	];
.

<tripDirection>
	xrr:logicalSource [
		xrr:query """db.TRIPS.find( { 'trip_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/CITY/trips/{$.trip_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Trip>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#direction> ];
		rr:objectMap[
			xrr:reference "$.direction_id";
			rr:datatype xsd:boolean;
		];
	];
.


<services1>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/services/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Service>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#Service>
		];
	];
.

<services1ServiceRule>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/services/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Service>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#serviceRule> ];
		rr:objectMap[
			rr:parentTriplesMap <calendar_rules>; 
			rr:joinCondition [ rr:child "$.service_id"; rr:parent "$.service_id"; ];
		];
	];
.

<services2>
	xrr:logicalSource [
		xrr:query """db.CALENDAR_DATES.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/services/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Service>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ];
		rr:objectMap[
			rr:constant <http://vocab.gtfs.org/terms#Service>
		];
	];
.

<services2ServiceRule>
	xrr:logicalSource [
		xrr:query """db.CALENDAR.find( { 'service_id' : {$exists: 1} } )""";
	];
	rr:subjectMap [
		rr:template "http://linkedgtfs.com/madrid/metro/services/{$.service_id}";
		rr:termType <http://www.w3.org/ns/r2rml#IRI>;
		rr:class <http://vocab.gtfs.org/terms#Service>;
	];
	rr:predicateObjectMap [
		rr:predicateMap [ rr:constant <http://vocab.gtfs.org/terms#serviceRule> ];
		rr:objectMap[
			rr:parentTriplesMap <calendar_date_rules>; 
			rr:joinCondition [ rr:child "$.service_id"; rr:parent "$.service_id"; ];
		];
	];
.
